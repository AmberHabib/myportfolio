## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
# exploratory analysis -- scatterplot
plot(bei,
main="Tree Locations")
# exploratory analysis -- quadrant count
Q <- quadratcount(bei,
nx = 6,
ny = 3)
Q
plot(bei,
cex = 0.5,
pch = "+",
main="Tree Locations")
plot(Q,
add = TRUE,
cex = 2)
###################################################
## COMPUTING DEMO:  Spatial Point Patterns I
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
# exploratory analysis -- scatterplot
plot(bei,
main="Tree Locations")
# exploratory analysis -- quadrant count
Q <- quadratcount(bei,
nx = 6,
ny = 3)
Q
plot(bei,
cex = 0.5,
pch = "+",
main="Tree Locations")
plot(Q,
add = TRUE,
cex = 2)
# exploratory analysis -- adding covariate information to the plot
elev <- bei.extra$elev
slope <- bei.extra$grad
class(elev)
class(slope)
plot(elev,
col = grey(seq(1,0,length=128)),
main="Tree Locations with Elevation")
plot(bei,
add=T,
pch=16,
cex=.5,
col = "red")
plot(slope,
col = grey(seq(1,0,length=128)),
main="Tree Locations with Slope")
plot(bei,
add=T,
pch=16,
cex=.5,
col = "red")
# perspective plot
plot_persp <- persp(bei.extra$elev,
theta=-45,
phi=18,
expand=7,
border=NA,
apron=TRUE,
shade=0.3,
box=FALSE,
visible=TRUE,
main = "True Locations with Elevation")
perspPoints(bei,
Z = bei.extra$elev,
M = plot_persp,
pch=16)
###################################################
# TESTING FOR CSR (chi-squire test)
bei.quadtest <- quadrat.test(bei,
nx = 6,
ny = 3)  # how does number of quadrants affect results?
bei.quadtest
###################################################
# KERNEL DENSITY SMOOTHING
# fixed sigma = 50
bei_dens_50 <- density(bei,
kernel="gaussian",
sigma = 50)
plot(bei_dens_50,
col = grey(seq(1,0,length=128)),
main=expression(paste("KS Estimator of the Intensity Func. sigma = 50")))
plot(bei,
add = TRUE,
cex = 0.5,
col = "red")
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
plot(bei,
main="Tree Locations")
# exploratory analysis -- quadrant count
Q <- quadratcount(bei,
nx = 6,
ny = 3)
Q
plot(bei,
cex = 0.5,
pch = "+",
main="Tree Locations")
plot(Q,
add = TRUE,
cex = 2)
View(markets_ppp)
View(markets_ppp)
markets_ppp[["y"]]
###################################################
## COMPUTING DEMO:  Spatial Point Patterns I
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
# exploratory analysis -- scatterplot
plot(bei,
main="Tree Locations")
# exploratory analysis -- quadrant count
Q <- quadratcount(bei,
nx = 6,
ny = 3)
Q
plot(bei,
cex = 0.5,
pch = "+",
main="Tree Locations")
plot(Q,
add = TRUE,
cex = 2)
# exploratory analysis -- adding covariate information to the plot
elev <- bei.extra$elev
slope <- bei.extra$grad
class(elev)
class(slope)
plot(elev,
col = grey(seq(1,0,length=128)),
main="Tree Locations with Elevation")
plot(bei,
add=T,
pch=16,
cex=.5,
col = "red")
plot(slope,
col = grey(seq(1,0,length=128)),
main="Tree Locations with Slope")
plot(bei,
add=T,
pch=16,
cex=.5,
col = "red")
# perspective plot
plot_persp <- persp(bei.extra$elev,
theta=-45,
phi=18,
expand=7,
border=NA,
apron=TRUE,
shade=0.3,
box=FALSE,
visible=TRUE,
main = "True Locations with Elevation")
plot_persp <- persp(bei.extra$elev,
theta=-45,
phi=18,
expand=7,
border=TRUE,
apron=TRUE,
shade=0.3,
box=FALSE,
visible=TRUE,
main = "True Locations with Elevation")
t <- edges(markets_ppp)
plot(t)
t <- edges(markets_ppp)
t
###################################################
## COMPUTING DEMO:  Spatial Point Patterns II
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
# load the cell data - locations of the centers
# of 42 biological cells observed under
# optical microscopy in a histological section
data(cells)
plot(cells,
main="Cell Locations")
###################################################
# K FUNCTION AND DIAGNOSTICS
#  Compute the estimated K function
K_cells <- Kest(cells,
correction = "border")
plot(K_cells,
main="Estimated K function")
lambda_hat <- cells$n # section is 1x1
N_samp <- 15
X_samp <- list(N_samp)
K_X_samp <- list(N_samp)
for(i in 1:N_samp)
{
X_samp[[i]] <- rpoispp(lambda_hat,
win=owin(c(0,1),c(0,1)))
K_X_samp[[i]] <- Kest(X_samp[[i]],
correction = "border")
}
par(ask=T)
for(i in 1:N_samp)
{
plot(X_samp[[i]],
main=paste("Sampled SPP ", i))
par(ask=F)
plot(K_cells$r,
K_cells$border,
type = 'l',
lty = 1,
col = 'red',
xlab = "r",
ylab = "Kest(r)")
## COMPUTING DEMO:  Spatial Point Patterns II
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
# load the cell data - locations of the centers
# of 42 biological cells observed under
# optical microscopy in a histological section
data(cells)
plot(cells,
main="Cell Locations")
# K FUNCTION AND DIAGNOSTICS
#  Compute the estimated K function
K_cells <- Kest(cells,
correction = "border")
plot(K_cells,
main="Estimated K function")
# Monte Carlo assessments of CSR
lambda_hat <- cells$n # section is 1x1
N_samp <- 15
X_samp <- list(N_samp)
K_X_samp <- list(N_samp)
for(i in 1:N_samp)
{
X_samp[[i]] <- rpoispp(lambda_hat,
win=owin(c(0,1),c(0,1)))
K_X_samp[[i]] <- Kest(X_samp[[i]],
correction = "border")
}
par(ask=T)
for(i in 1:N_samp)
{
plot(X_samp[[i]],
main=paste("Sampled SPP ", i))
}
par(ask=F)
par(ask=F)
plot(K_cells$r,
K_cells$border,
type = 'l',
lty = 1,
col = 'red',
xlab = "r",
ylab = "Kest(r)")
par(ask=F)
plot(K_cells$r,
K_cells$border,
type = 'l',
lty = 1,
col = 'red',
xlab = "r",
ylab = "Kest(r)")
for(i in 1:N_samp)
{
lines(K_X_samp[[i]]$r,
K_X_samp[[i]]$border,
lty = 2,
col = "darkgray")
}
par(ask=F)
plot(K_cells$r,
K_cells$border,
type = 'l',
lty = 1,
col = 'red',
xlab = "r",
ylab = "Kest(r)")
for(i in 1:N_samp)
{
lines(K_X_samp[[i]]$r,
K_X_samp[[i]]$border,
lty = 2,
col = "darkgray")
}
# using the envelope function
Kfunc_E <- envelope(cells,
Kest,
correction = "border",
nsim = 39,
rank = 1)
plot(Kfunc_E,  main="Estimated K function")
###################################################
## COMPUTING DEMO:  Spatial Point Patterns II
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
# load the cell data - locations of the centers
# of 42 biological cells observed under
# optical microscopy in a histological section
data(cells)
plot(cells,
main="Cell Locations")
###################################################
# K FUNCTION AND DIAGNOSTICS
#  Compute the estimated K function
K_cells <- Kest(cells,
correction = "border")
plot(K_cells,
main="Estimated K function")
# Monte Carlo assessments of CSR
lambda_hat <- cells$n # section is 1x1
N_samp <- 15
X_samp <- list(N_samp)
K_X_samp <- list(N_samp)
for(i in 1:N_samp)
{
X_samp[[i]] <- rpoispp(lambda_hat,
win=owin(c(0,1),c(0,1)))
K_X_samp[[i]] <- Kest(X_samp[[i]],
correction = "border")
}
par(ask=T)
for(i in 1:N_samp)
{
plot(X_samp[[i]],
main=paste("Sampled SPP ", i))
}
par(ask=F)
plot(K_cells$r,
K_cells$border,
type = 'l',
lty = 1,
col = 'red',
xlab = "r",
ylab = "Kest(r)")
for(i in 1:N_samp)
{
lines(K_X_samp[[i]]$r,
K_X_samp[[i]]$border,
lty = 2,
col = "darkgray")
}
# using the envelope function
Kfunc_E <- envelope(cells,
Kest,
correction = "border",
nsim = 39,
rank = 1)
plot(Kfunc_E,  main="Estimated K function")
## COMPUTING DEMO:  Spatial Point Patterns I
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
###################################################
## COMPUTING DEMO:  Spatial Point Patterns I
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
# exploratory analysis -- scatterplot
plot(bei,
main="Tree Locations")
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
# exploratory analysis -- scatterplot
plot(bei,
main="Tree Locations")
###################################################
## COMPUTING DEMO:  Spatial Point Patterns I
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
###################################################
# EXPLORATORY ANALYSIS OF SPP
data(bei) # true locations in a tropical rain forest
class(bei)
bei
# exploratory analysis -- scatterplot
plot(bei,
main="Tree Locations")
###################################################
## COMPUTING DEMO:  Spatial Point Patterns I
##
## DSC 383: Advanced Predictive Models for Complex Data
## By:  Kate Calder, UT Austin
# (adopted from analyses in "Spatial Point Patterns: Methodology and
#  Applications with R" by Baddeley, Rupak, and Turner, 2015)
## Last updated: September 1, 2021
###################################################
# load libraries
library(spatstat)
data(bei) # true locations in a tropical rain forest
class(bei)
bei
load("~/Masters_degree/APM/week4/supermarkets_ppp.Rdata")
getwd()
setwd("C:/Users/amber/Documents/personalgitprojects/myportfolio")
getwd()
library(ggplot2)
library(gganimate)
htmltools::tags$iframe(
src = "output.html",
scrolling = "no",
seamless = "seamless",
frameBorder = "0"
)
p <- plot_ly(x = 1:10, y = 1:10) %>% add_markers()
plot_ly
installed.packages('plot-ly')
install.packages('plot-ly')
